{"version":3,"sources":["webpack:///src/views/workStudy/vuex/start/index.vue","webpack:///./src/views/workStudy/vuex/start/index.vue?dcc4","webpack:///./src/views/workStudy/vuex/start/index.vue"],"names":["start","vuex_start","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","_v","attrs","target","href","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"yGA0DAA,QAEA,+BACA,yCAEA,oDC5DAC,GADiBC,OAFjB,WAA0BC,KAAaC,eAAbD,KAAuCE,MAAAC,GAAwB,OAA/DH,KAA+DI,GAAA,IAExEC,iBADjB,WAAoC,IAAAC,EAAAN,KAAaO,EAAAD,EAAAL,eAA0BE,EAAAG,EAAAJ,MAAAC,IAAAI,EAAwB,OAAAJ,EAAA,OAAiBK,YAAA,2BAAqCL,EAAA,KAAUK,YAAA,YAAsBF,EAAAG,GAAA,WAAAH,EAAAG,GAAA,KAAAN,EAAA,OAA0CK,YAAA,iBAA2BF,EAAAG,GAAA,QAAAN,EAAA,QAA4BK,YAAA,gBAA0BF,EAAAG,GAAA,wUAAuSH,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,KAA+EK,YAAA,UAAoBF,EAAAG,GAAA,uIAAAN,EAAA,KAAwJO,OAAOC,OAAA,SAAAC,KAAA,oDAA2EN,EAAAG,GAAA,qBAAAH,EAAAG,GAAA,WAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAoEK,YAAA,YAAsBF,EAAAG,GAAA,+CAAAH,EAAAG,GAAA,KAAAN,EAAA,OAA8EK,YAAA,iBAA2BF,EAAAG,GAAA,QAAAN,EAAA,QAA4BK,YAAA,gBAA0BF,EAAAG,GAAA,wGAAkDH,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAoGK,YAAA,WAAqBF,EAAAG,GAAA,SAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAsCK,YAAA,UAAoBF,EAAAG,GAAA,iDAAAN,EAAA,KAAAG,EAAAG,GAAA,0BAAAH,EAAAG,GAAA,WAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAyIK,YAAA,WAAqBF,EAAAG,GAAA,WAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAwCK,YAAA,UAAoBF,EAAAG,GAAA,yGAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAsIK,YAAA,UAAoBF,EAAAG,GAAA,+FAAAH,EAAAG,GAAA,KAAAN,EAAA,KAA4HK,YAAA,UAAoBF,EAAAG,GAAA,mIAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAgKK,YAAA,UAAoBF,EAAAG,GAAA,2MCa9jEI,EAdAC,EAAA,OAcAC,CACAlB,EACAC,GATA,EAEA,KAEA,KAEA,MAUAkB,EAAA,QAAAH,EAAA","file":"static/js/8.c76151e693a8dcd5dbd0.js","sourcesContent":["<template>\n  <div class=\"container v-vuex-start\">\n    <p class=\"v-title\">首先上代码</p>\n    <pre class=\"line-numbers\">\n      <code class=\"language-js\">\n        import Vue from 'vue'\n        import Vuex from 'vuex'\n\n        Vue.use(Vuex)\n\n        const store = new Vuex.Store({\n          state: {\n            count: 0\n          },\n          mutations: {\n            increment(state) {\n              state.count++\n            }\n          }\n        })\n\n        export default store\n      </code>\n    </pre>\n    <p class=\"v-txt\">\n      以上是vue-cli的写法，首先在项目src目录下新建一个stroe文件夹，然后在store文件夹下新建一个js文件，js文件内容为上面代码。首先引用vue和vuex，然后通过.use()方法注册vuex，最后new一个vuex实例(当然，前提是已经<a target=\"_blank\" href=\"https://vuex.vuejs.org/zh-cn/installation.html\">通过npm将vuex安装到项目</a>)\n    </p>\n    <p class=\"v-title\">\n      当使用如下代码改变state中count的值，并打印这个值时:\n    </p>\n    <pre class=\"line-numbers\">\n      <code class=\"language-js\">\n        this.$store.commit('increment');\n        console.log(this.$store.state.count) // => 1\n      </code>\n    </pre>\n    <p class=\"v-note\">注意：</p>\n    <p class=\"v-txt\">\n      我们不能直接改变store中的状态，改变store中的状态的唯一途径就是显式地<b>提交 (commit) mutation</b>。\n    </p>\n    <p class=\"v-note\">写在最后：</p>\n    <p class=\"v-txt\">\n      每一个 Vuex 应用的核心就是 store（仓库）。“store”基本上就是一个容器，它包含着你的应用中大部分的状态 (state)。Vuex 和单纯的全局对象有以下两点不同：\n    </p>\n    <p class=\"v-txt\">\n      1.Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。\n    </p>\n    <p class=\"v-txt\">\n      2.你不能直接改变 store 中的状态。改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation。这样使得我们可以方便地跟踪每一个状态的变化，从而让我们能够实现一些工具帮助我们更好地了解我们的应用。\n    </p>\n    <p class=\"v-txt\">\n      (再次强调，我们通过提交 mutation 的方式，而非直接改变 store.state.count，是因为我们想要更明确地追踪到状态的变化。这个简单的约定能够让你的意图更加明显，这样你在阅读代码的时候能更容易地解读应用内部的状态改变。此外，这样也让我们有机会去实现一些能记录每次状态改变，保存状态快照的调试工具。有了它，我们甚至可以实现如时间穿梭般的调试体验。)\n    </p>\n  </div>\n</template>\n\n<script>\n  import mixin from '@/mixins/prism';\n  export default {\n    name: 'vuex-start',\n    mixins: [mixin],\n    created() {\n      this.$store.commit('increment');\n      console.log(this.$store.state.count) // => 1\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/workStudy/vuex/start/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container v-vuex-start\"},[_c('p',{staticClass:\"v-title\"},[_vm._v(\"首先上代码\")]),_vm._v(\" \"),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-js\"},[_vm._v(\"\\n      import Vue from 'vue'\\n      import Vuex from 'vuex'\\n\\n      Vue.use(Vuex)\\n\\n      const store = new Vuex.Store({\\n        state: {\\n          count: 0\\n        },\\n        mutations: {\\n          increment(state) {\\n            state.count++\\n          }\\n        }\\n      })\\n\\n      export default store\\n    \")]),_vm._v(\"\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-txt\"},[_vm._v(\"\\n    以上是vue-cli的写法，首先在项目src目录下新建一个stroe文件夹，然后在store文件夹下新建一个js文件，js文件内容为上面代码。首先引用vue和vuex，然后通过.use()方法注册vuex，最后new一个vuex实例(当然，前提是已经\"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":\"https://vuex.vuejs.org/zh-cn/installation.html\"}},[_vm._v(\"通过npm将vuex安装到项目\")]),_vm._v(\")\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-title\"},[_vm._v(\"\\n    当使用如下代码改变state中count的值，并打印这个值时:\\n  \")]),_vm._v(\" \"),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-js\"},[_vm._v(\"\\n      this.$store.commit('increment');\\n      console.log(this.$store.state.count) // => 1\\n    \")]),_vm._v(\"\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-note\"},[_vm._v(\"注意：\")]),_vm._v(\" \"),_c('p',{staticClass:\"v-txt\"},[_vm._v(\"\\n    我们不能直接改变store中的状态，改变store中的状态的唯一途径就是显式地\"),_c('b',[_vm._v(\"提交 (commit) mutation\")]),_vm._v(\"。\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-note\"},[_vm._v(\"写在最后：\")]),_vm._v(\" \"),_c('p',{staticClass:\"v-txt\"},[_vm._v(\"\\n    每一个 Vuex 应用的核心就是 store（仓库）。“store”基本上就是一个容器，它包含着你的应用中大部分的状态 (state)。Vuex 和单纯的全局对象有以下两点不同：\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-txt\"},[_vm._v(\"\\n    1.Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-txt\"},[_vm._v(\"\\n    2.你不能直接改变 store 中的状态。改变 store 中的状态的唯一途径就是显式地提交 (commit) mutation。这样使得我们可以方便地跟踪每一个状态的变化，从而让我们能够实现一些工具帮助我们更好地了解我们的应用。\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-txt\"},[_vm._v(\"\\n    (再次强调，我们通过提交 mutation 的方式，而非直接改变 store.state.count，是因为我们想要更明确地追踪到状态的变化。这个简单的约定能够让你的意图更加明显，这样你在阅读代码的时候能更容易地解读应用内部的状态改变。此外，这样也让我们有机会去实现一些能记录每次状态改变，保存状态快照的调试工具。有了它，我们甚至可以实现如时间穿梭般的调试体验。)\\n  \")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3e6a3f41\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/workStudy/vuex/start/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3e6a3f41\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/workStudy/vuex/start/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}