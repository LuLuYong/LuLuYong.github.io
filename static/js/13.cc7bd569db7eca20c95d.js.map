{"version":3,"sources":["webpack:///src/views/workStudy/vuex/core/getter/index.vue","webpack:///./src/views/workStudy/vuex/core/getter/index.vue?351e","webpack:///./src/views/workStudy/vuex/core/getter/index.vue"],"names":["getter","core_getter","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","staticClass","_v","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"4GA0GAA,QAEA,qCACA,IC1GAC,GADiBC,OAFjB,WAA0BC,KAAaC,eAAbD,KAAuCE,MAAAC,GAAwB,OAA/DH,KAA+DI,GAAA,IAExEC,iBADjB,WAAoC,IAAAC,EAAAN,KAAaO,EAAAD,EAAAL,eAA0BE,EAAAG,EAAAJ,MAAAC,IAAAI,EAAwB,OAAAJ,EAAA,OAAiBK,YAAA,uBAAiCL,EAAA,OAAYK,YAAA,iBAA2BF,EAAAG,GAAA,QAAAN,EAAA,QAA4BK,YAAA,gBAA0BF,EAAAG,GAAA,4NAAyNH,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAiDK,YAAA,YAAsBF,EAAAG,GAAA,mGAAAH,EAAAG,GAAA,KAAAN,EAAA,OAAkIK,YAAA,iBAA2BF,EAAAG,GAAA,QAAAN,EAAA,QAA4BK,YAAA,gBAA0BF,EAAAG,GAAA,2JAAyJH,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAgDK,YAAA,UAAoBF,EAAAG,GAAA,6FAAAH,EAAAG,GAAA,KAAAN,EAAA,KAA0HK,YAAA,YAAsBF,EAAAG,GAAA,qHAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAkJK,YAAA,YAAsBF,EAAAG,GAAA,qCAAAH,EAAAG,GAAA,KAAAN,EAAA,OAAoEK,YAAA,iBAA2BF,EAAAG,GAAA,QAAAN,EAAA,QAA4BK,YAAA,gBAA0BF,EAAAG,GAAA,8WAA2WH,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAiDK,YAAA,WAAqBF,EAAAG,GAAA,YAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAyCK,YAAA,YAAsBF,EAAAG,GAAA,2DAAAH,EAAAG,GAAA,KAAAN,EAAA,OAA0FK,YAAA,iBAA2BF,EAAAG,GAAA,QAAAN,EAAA,QAA4BK,YAAA,gBAA0BF,EAAAG,GAAA,mDAAAH,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAiGK,YAAA,WAAqBF,EAAAG,GAAA,YAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAyCK,YAAA,YAAsBF,EAAAG,GAAA,oEAAAH,EAAAG,GAAA,KAAAN,EAAA,OAAmGK,YAAA,iBAA2BF,EAAAG,GAAA,QAAAN,EAAA,QAA4BK,YAAA,gBAA0BF,EAAAG,GAAA,+fAA4fH,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,OAAmDK,YAAA,iBAA2BF,EAAAG,GAAA,QAAAN,EAAA,QAA4BK,YAAA,gBAA0BF,EAAAG,GAAA,oFAAkFH,EAAAG,GAAA,UAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAgDK,YAAA,WAAqBF,EAAAG,GAAA,oBAAAH,EAAAG,GAAA,KAAAN,EAAA,KAAiDK,YAAA,UAAoBF,EAAAG,GAAA,uECa/uGC,EAdAC,EAAA,OAcAC,CACAf,EACAC,GATA,EAEA,KAEA,KAEA,MAUAe,EAAA,QAAAH,EAAA","file":"static/js/13.cc7bd569db7eca20c95d.js","sourcesContent":["<template>\n  <div class=\"v-vuex-core-getter\">\n    <pre class=\"line-numbers\">\n      <code class=\"language-js\">\n        const store = new Vuex.Store({\n          state: {\n            todos: [\n              { id: 1, text: '...', done: true },\n              { id: 2, text: '...', done: false }\n            ]\n          }\n        })\n      </code>\n    </pre>\n    <p class=\"v-title\">\n      如果store中state有一个todos数组状态，此时我们需要从这个todos派生出另一个状态，这个状态的值是todos数组的length。我们可以在组件中这么写：\n    </p>\n    <pre class=\"line-numbers\">\n      <code class=\"language-js\">\n        computed: {\n          doneTodosCount () {\n            return this.$store.state.todos.filter(todo => todo.done).length\n          }\n        }\n      </code>\n    </pre>\n    <p class=\"v-txt\">\n      如果有多个组件需要用到此属性，那么我们要么复制这个函数，要么将这个函数抽到一个共享函数中，然后去到处引用它。两种方法都不是很理想，所以就有了getter。\n    </p>\n    <p class=\"v-title\">\n      Vuex允许我们在store中定义getter（getter可以看做是store的计算属性）。就像计算属性一样，getter的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。\n    </p>\n    <p class=\"v-title\">\n      getter接受state作为其第一个参数\n    </p>\n    <pre class=\"line-numbers\">\n      <code class=\"language-js\">\n        const store = new Vuex.Store({\n          state: {\n            todos: [\n              { id: 1, text: '...', done: true },\n              { id: 2, text: '...', done: false }\n            ]\n          },\n          getters: {\n            todosLength: state => {\n              return state.todos.filter(todo => todo.done).length;\n            }\n          }\n        })\n      </code>\n    </pre>\n    <p class=\"v-note\">通过属性访问</p>\n    <p class=\"v-title\">\n      getter会暴露为store.getters对象，我们可以通过属性方式来访问这些值：\n    </p>\n    <pre class=\"line-numbers\">\n      <code class=\"language-js\">\n        this.$store.getters.todosLength\n      </code>\n    </pre>\n    <p class=\"v-note\">通过方法访问</p>\n    <p class=\"v-title\">\n      我们也可以通过让getter返回一个函数，来实现给getter传参。这对store数组进行查询时非常有用\n    </p>\n    <pre class=\"line-numbers\">\n      <code class=\"language-js\">\n        const store = new Vuex.Store({\n          state: {\n            todos: [\n              {\n                id: '1',\n                label: 'a'\n              },\n              {\n                id: '2',\n                label: 'b'\n              },\n              {\n                id: '3',\n                label: 'c'\n              }\n            ]\n          },\n          getters: {\n            getTodoById: state => id => {\n              return state.todos.find(todo => todo.id === id)\n            }\n          }\n        })\n      </code>\n    </pre>\n    <pre class=\"line-numbers\">\n      <code class=\"language-js\">\n        this.$store.getters.getTodoById('2') // => {id: '2', label: 'b'}\n      </code>\n    </pre>\n    <p class=\"v-note\">mapGetters辅助函数</p>\n    <p class=\"v-txt\">\n      与上一节的mapState辅助函数用法类似，其作用是将store中的getter映射到局部计算属性。\n    </p>\n  </div>\n</template>\n\n<script>\n  import mixin from '@/mixins/prism';\n  export default {\n    name: 'vuex-core-getter',\n    mixins: [mixin]\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/workStudy/vuex/core/getter/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"v-vuex-core-getter\"},[_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-js\"},[_vm._v(\"\\n      const store = new Vuex.Store({\\n        state: {\\n          todos: [\\n            { id: 1, text: '...', done: true },\\n            { id: 2, text: '...', done: false }\\n          ]\\n        }\\n      })\\n    \")]),_vm._v(\"\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-title\"},[_vm._v(\"\\n    如果store中state有一个todos数组状态，此时我们需要从这个todos派生出另一个状态，这个状态的值是todos数组的length。我们可以在组件中这么写：\\n  \")]),_vm._v(\" \"),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-js\"},[_vm._v(\"\\n      computed: {\\n        doneTodosCount () {\\n          return this.$store.state.todos.filter(todo => todo.done).length\\n        }\\n      }\\n    \")]),_vm._v(\"\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-txt\"},[_vm._v(\"\\n    如果有多个组件需要用到此属性，那么我们要么复制这个函数，要么将这个函数抽到一个共享函数中，然后去到处引用它。两种方法都不是很理想，所以就有了getter。\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-title\"},[_vm._v(\"\\n    Vuex允许我们在store中定义getter（getter可以看做是store的计算属性）。就像计算属性一样，getter的返回值会根据它的依赖被缓存起来，且只有当它的依赖值发生了改变才会被重新计算。\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-title\"},[_vm._v(\"\\n    getter接受state作为其第一个参数\\n  \")]),_vm._v(\" \"),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-js\"},[_vm._v(\"\\n      const store = new Vuex.Store({\\n        state: {\\n          todos: [\\n            { id: 1, text: '...', done: true },\\n            { id: 2, text: '...', done: false }\\n          ]\\n        },\\n        getters: {\\n          todosLength: state => {\\n            return state.todos.filter(todo => todo.done).length;\\n          }\\n        }\\n      })\\n    \")]),_vm._v(\"\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-note\"},[_vm._v(\"通过属性访问\")]),_vm._v(\" \"),_c('p',{staticClass:\"v-title\"},[_vm._v(\"\\n    getter会暴露为store.getters对象，我们可以通过属性方式来访问这些值：\\n  \")]),_vm._v(\" \"),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-js\"},[_vm._v(\"\\n      this.$store.getters.todosLength\\n    \")]),_vm._v(\"\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-note\"},[_vm._v(\"通过方法访问\")]),_vm._v(\" \"),_c('p',{staticClass:\"v-title\"},[_vm._v(\"\\n    我们也可以通过让getter返回一个函数，来实现给getter传参。这对store数组进行查询时非常有用\\n  \")]),_vm._v(\" \"),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-js\"},[_vm._v(\"\\n      const store = new Vuex.Store({\\n        state: {\\n          todos: [\\n            {\\n              id: '1',\\n              label: 'a'\\n            },\\n            {\\n              id: '2',\\n              label: 'b'\\n            },\\n            {\\n              id: '3',\\n              label: 'c'\\n            }\\n          ]\\n        },\\n        getters: {\\n          getTodoById: state => id => {\\n            return state.todos.find(todo => todo.id === id)\\n          }\\n        }\\n      })\\n    \")]),_vm._v(\"\\n  \")]),_vm._v(\" \"),_c('pre',{staticClass:\"line-numbers\"},[_vm._v(\"    \"),_c('code',{staticClass:\"language-js\"},[_vm._v(\"\\n      this.$store.getters.getTodoById('2') // => {id: '2', label: 'b'}\\n    \")]),_vm._v(\"\\n  \")]),_vm._v(\" \"),_c('p',{staticClass:\"v-note\"},[_vm._v(\"mapGetters辅助函数\")]),_vm._v(\" \"),_c('p',{staticClass:\"v-txt\"},[_vm._v(\"\\n    与上一节的mapState辅助函数用法类似，其作用是将store中的getter映射到局部计算属性。\\n  \")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2bb54107\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/workStudy/vuex/core/getter/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2bb54107\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/workStudy/vuex/core/getter/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}