webpackJsonp([11],{j3CQ:function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var s={name:"vuex-core-moudle",mixins:[e("SZs6").a]},a={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"v-vuex-core-module"},[e("p",{staticClass:"v-txt"},[t._v("\n    由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store对象就有可能变得相当臃肿。所以，我们可以使用module将store分割成多个模块。每个模块拥有自己的state，mutation，getter，action，甚至是嵌套子模块。\n  ")]),t._v(" "),e("pre",{staticClass:"line-numbers"},[t._v("    "),e("code",{staticClass:"language-js"},[t._v("\n      const moduleA = {\n        state: { ... },\n        mutations: { ... },\n        actions: { ... },\n        getters: { ... }\n      }\n\n      const moduleB = {\n        state: { ... },\n        mutations: { ... },\n        actions: { ... }\n      }\n\n      const store = new Vuex.Store({\n        modules: {\n          a: moduleA,\n          b: moduleB\n        }\n      })\n\n      store.state.a // -> moduleA 的状态\n      store.state.b // -> moduleB 的状态\n    ")]),t._v("\n  ")]),t._v(" "),e("p",{staticClass:"v-note"},[t._v("\n    模块的局部状态\n  ")]),t._v(" "),e("p",{staticClass:"v-txt"},[t._v("\n    对于模块内部的mutation和getter，接收的第一个参数，是"),e("b",[t._v("模块的局部状态对象（state）。")])]),t._v(" "),e("p",{staticClass:"v-txt"},[t._v("\n    对于模块内部的action，局部状态通过context.state暴露出来，根节点状态则为context.rootState\n  ")]),t._v(" "),e("pre",{staticClass:"line-numbers"},[t._v("    "),e("code",{staticClass:"language-js"},[t._v("\n      const moduleA = {\n        // ...\n        actions: {\n          incrementIfOddOnRootSum ({ state, commit, rootState }) {\n            if ((state.count + rootState.count) % 2 === 1) {\n              commit('increment')\n            }\n          }\n        }\n      }\n    ")]),t._v("\n  ")]),t._v(" "),e("p",{staticClass:"v-txt"},[t._v("\n    对于模块内部的getter，根节点状态会作为第三个参数暴露出来。\n  ")]),t._v(" "),e("pre",{staticClass:"line-numbers"},[t._v("    "),e("code",{staticClass:"language-js"},[t._v("\n      const moduleA = {\n        // ...\n        getters: {\n          sumWithRootCount (state, getters, rootState) {\n            return state.count + rootState.count\n          }\n        }\n      }\n    ")]),t._v("\n  ")]),t._v(" "),e("p",{staticClass:"v-title"},[e("b",[t._v("命名空间")]),t._v("待更新...\n  ")])])}]},o=e("VU/8")(s,a,!1,null,null,null);n.default=o.exports}});
//# sourceMappingURL=11.f6beaba654edac91d55a.js.map